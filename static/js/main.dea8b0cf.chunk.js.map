{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","components/TaskItem.js","components/TaskList.js","components/TaskForm.js","components/TaskSearchControl.js","components/TaskSortControl.js","components/TaskControl.js","App.js","reportWebVitals.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/itemEditing.js","reducers/filterTable.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["LIST_ALL","SAVE_TASK","TOGGLE_FORM","CLOSE_FORM","OPEN_FORM","UPDATE_STATUS_TASK","DELETE_TASK","EDIT_TASK","FILTER_TABLE","SEARCH","SORT","toggleForm","type","types","closeForm","editTask","task","TaskItem","onUpdateStatus","props","id","onDeleteItem","onDeleteTask","onCloseForm","onEditTask","onOpenForm","className","this","status","onClick","index","name","showStatusElement","Component","connect","state","dispatch","actions","TaskList","onChange","event","target","value","checked","filter","filterName","filterStatus","onFilterTable","setState","tasks","filterTable","keyword","sort","console","log","toLowerCase","indexOf","by","a","b","elmTasks","map","filerName","search","TaskForm","onHandleChange","onSave","preventDefault","onSaveTask","onClear","onExitForm","itemEditing","nextProps","isDisplayForm","onSubmit","resetState","TaskSearchControl","onSearch","placeholder","TaskSortControl","sortBy","sortValue","onSort","role","TaskControl","App","onToggleForm","onClearTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","s4","Math","floor","random","toString","substring","randomID","findIndex","result","forEach","data","JSON","parse","localStorage","getItem","initialState","myReducer","action","push","setItem","stringify","splice","parseInt","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"mQACaA,EAAW,WACXC,EAAY,YACZC,EAAc,cACdC,EAAa,aACbC,EAAY,YACZC,EAAqB,qBACrBC,EAAc,cACdC,EAAU,YACVC,EAAa,eACbC,EAAO,SACPC,EAAK,OCELC,EAAa,WACtB,MAAO,CACHC,KAAMC,IAQDC,EAAY,WACrB,MAAO,CACHF,KAAMC,IAeDE,EAAW,SAACC,GACrB,MAAO,CACHJ,KAAMC,EACNG,KAAMA,I,OCtCRC,E,4MAWFC,eAAiB,WACb,EAAKC,MAAMD,eAAe,EAAKC,MAAMH,KAAKI,K,EAG9CC,aAAe,WACX,EAAKF,MAAMG,aAAa,EAAKH,MAAMH,KAAKI,IACxC,EAAKD,MAAMI,e,EAGfC,WAAa,WACT,EAAKL,MAAMM,aACX,EAAKN,MAAMK,WAAW,EAAKL,MAAMH,O,uDApBrC,WACI,OACI,sBACIU,UAAYC,KAAKR,MAAMH,KAAKY,OAAS,qBAAuB,mBAC5DC,QAAUF,KAAKT,eAFnB,UAG8B,IAA3BS,KAAKR,MAAMH,KAAKY,OAAkB,oBAAc,c,oBAkB3D,WACI,OACI,+BACI,6BAAMD,KAAKR,MAAMW,QACjB,6BAAMH,KAAKR,MAAMH,KAAKe,OACtB,oBAAIL,UAAU,cAAd,SACMC,KAAKK,sBAEX,qBAAIN,UAAU,cAAd,UACI,yBACId,KAAK,SACLc,UAAU,kBACVG,QAAUF,KAAKH,WAHnB,UAII,sBAAME,UAAU,sBAJpB,cADJ,OAQI,yBAAQd,KAAK,SAASc,UAAU,iBAAiBG,QAAUF,KAAKN,aAAhE,UACI,sBAAMK,UAAU,qBADpB,sB,GAzCGO,aAyERC,eAxBS,SAAAC,GACpB,MAAO,MAEgB,SAACC,EAASjB,GACjC,MAAM,CACFD,eAAiB,SAACE,GACdgB,EDhCgB,SAAChB,GACzB,MAAO,CACHR,KAAMC,EACNO,GAAIA,GC6BSiB,CAAqBjB,KAElCE,aAAe,SAACF,GACZgB,ED7Bc,SAAChB,GACvB,MAAO,CACHR,KAAMC,EACNO,GAAIA,GC0BSiB,CAAmBjB,KAE/BG,YAAc,WACXa,EAASC,MAEbZ,WAAa,WACTW,EAASC,MAGbb,WAAa,SAACR,GACVoB,EAASC,EAAiBrB,QAKvBkB,CAA4CjB,GCzErDqB,E,kDAEF,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IAOVoB,SAAW,SAACC,GACR,IAAIC,EAASD,EAAMC,OACfV,EAAOU,EAAOV,KACdW,EAAwB,aAAhBD,EAAO7B,KAAsB6B,EAAOE,QAAUF,EAAOC,MAC7DE,EAAS,CACTb,KAAgB,eAATA,EAAwBW,EAAQ,EAAKP,MAAMU,WAClDjB,OAAkB,iBAATG,EAA0BW,EAAQ,EAAKP,MAAMW,cAE1D,EAAK3B,MAAM4B,cAAcH,GACzB,EAAKI,SAAL,eACKjB,EAAQW,KAhBb,EAAKP,MAAQ,CACTU,WAAa,GACbC,cAAgB,GAJL,E,0CAsBnB,WACI,IAAI,EAAsCnB,KAAKR,MAAzC8B,EAAN,EAAMA,MAAMC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,KAClCC,QAAQC,IAAIF,GAERF,EAAYnB,OACZkB,EAAQA,EAAML,QAAO,SAAC5B,GAClB,OAA4E,IAArEA,EAAKe,KAAKwB,cAAcC,QAAQN,EAAYnB,KAAKwB,mBAahEN,GAVAA,EAAQA,EAAML,QAAO,SAAC5B,GAClB,OAA4B,IAAxBkC,EAAYtB,OACLZ,EAGJA,EAAKY,UAAmC,IAAvBsB,EAAYtB,YAK1BgB,QAAO,SAAC5B,GAClB,OAAmE,IAA5DA,EAAKe,KAAKwB,cAAcC,QAAQL,EAAQI,kBAInC,SAAZH,EAAKK,GACLR,EAAMG,MAAK,SAACM,EAAGC,GACX,OAAID,EAAE3B,KAAO4B,EAAE5B,KAAaqB,EAAKV,MACxBgB,EAAE3B,KAAO4B,EAAE5B,MAAcqB,EAAKV,MAC3B,KAIhBO,EAAMG,MAAK,SAACM,EAAGC,GACX,OAAID,EAAE9B,OAAS+B,EAAE/B,QAAgBwB,EAAKV,MAC7BgB,EAAE9B,OAAS+B,EAAE/B,OAAewB,EAAKV,MAC9B,KAGpB,IAAIkB,EAAWX,EAAMY,KAAI,SAAC7C,EAAMc,GAC5B,OACI,cAAC,EAAD,CAEId,KAAMA,EACNc,MAAOA,EAAQ,GAFVd,EAAKI,OAMtB,OACI,qBAAKM,UAAU,YAAf,SACI,qBAAKA,UAAU,0CAAf,SACI,wBAAOA,UAAU,mCAAjB,UACI,gCACI,+BACI,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,gCACA,oBAAIA,UAAU,cAAd,yCAGR,kCACI,+BACI,uBACA,6BACI,uBACId,KAAK,OACLc,UAAU,eACVK,KAAK,aACLQ,SAAWZ,KAAKY,SAChBG,MAAQf,KAAKQ,MAAM2B,cAG3B,6BACI,yBACIpC,UAAU,eACVK,KAAK,eACLQ,SAAWZ,KAAKY,SAChBG,MAAQf,KAAKQ,MAAMW,aAJvB,UAMI,wBAAQJ,OAAQ,EAAhB,8BACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,oCAGR,0BAEFkB,gB,GA7GP3B,aAsIRC,eAfS,SAACC,GACrB,MAAM,CACFc,MAAQd,EAAMc,MACdC,YAAcf,EAAMe,YACpBC,QAAUhB,EAAM4B,OAChBX,KAAOjB,EAAMiB,SAGM,SAAChB,EAASjB,GACjC,MAAM,CACF4B,cAAgB,SAACH,GACbR,EFzFc,SAACQ,GACvB,MAAO,CACHhC,KAAMC,EACN+B,OAAQA,GEsFKP,CAAmBO,QAIzBV,CAA6CI,GCtItD0B,E,kDAEF,WAAY7C,GAAQ,IAAD,8BACf,cAAMA,IAgCV8C,eAAiB,SAACzB,GACd,IAAIC,EAASD,EAAMC,OACfV,EAAOU,EAAOV,KACdW,EAAwB,aAAhBD,EAAO7B,KAAsB6B,EAAOE,QAAUF,EAAOC,MACjE,EAAKM,SAAL,eACKjB,EAAQW,KAtCE,EA0CnBwB,OAAS,SAAC1B,GACNA,EAAM2B,iBACN,EAAKhD,MAAMiD,WAAW,EAAKjC,OAC3B,EAAKkC,UACL,EAAKC,cA9CU,EAiDnBD,QAAU,WACN,EAAKrB,SAAS,CACVjB,KAAO,GACPH,QAAS,KApDE,EAwDnB0C,WAAa,WACT,EAAKnD,MAAMI,eAvDX,EAAKY,MAAQ,CACTf,GAAK,GACLW,KAAO,GACPH,QAAS,GALE,E,6DASnB,WACOD,KAAKR,MAAMoD,aAA6C,OAA9B5C,KAAKR,MAAMoD,YAAYnD,GAChDO,KAAKqB,SAAS,CACV5B,GAAKO,KAAKR,MAAMoD,YAAYnD,GAC5BW,KAAOJ,KAAKR,MAAMoD,YAAYxC,KAC9BH,OAASD,KAAKR,MAAMoD,YAAY3C,SAGpCD,KAAK0C,Y,8CAIb,SAAiCG,GAC1BA,GAAaA,EAAUD,YACtB5C,KAAKqB,SAAS,CACV5B,GAAKoD,EAAUD,YAAYnD,GAC3BW,KAAOyC,EAAUD,YAAYxC,KAC7BH,OAAS4C,EAAUD,YAAY3C,SAGnCD,KAAK0C,Y,oBA+Bb,WACI,OAAK1C,KAAKR,MAAMsD,cAKR,sBAAK/C,UAAU,sBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,cAAd,UACOC,KAAKQ,MAAMf,GAAwB,uCAAnB,4BACnB,sBACIM,UAAU,gCACVG,QAASF,KAAK2C,kBAI1B,qBAAK5C,UAAU,aAAf,SACI,uBAAMgD,SAAU/C,KAAKuC,OAArB,UACI,sBAAKxC,UAAU,aAAf,UACI,6CACA,uBACId,KAAK,OACLc,UAAU,eACVK,KAAK,OACLW,MAAOf,KAAKQ,MAAMJ,KAClBQ,SAAWZ,KAAKsC,oBAGxB,yDACA,yBACIvC,UAAU,eACVgB,MAAOf,KAAKQ,MAAMP,OAClBW,SAAUZ,KAAKsC,eACflC,KAAK,SAJT,UAMI,wBAAQW,OAAO,EAAf,+BACA,wBAAQA,OAAO,EAAf,wBACK,uBACT,sBAAKhB,UAAU,cAAf,UACI,yBAAQd,KAAK,SAASc,UAAU,kBAAhC,UACI,sBAAMA,UAAU,oBADpB,uBADJ,OAII,yBAAQd,KAAK,SAASiB,QAAUF,KAAKgD,WAAajD,UAAU,iBAA5D,UACI,sBAAMA,UAAU,qBADpB,iCAxCb,O,GAhEIO,aAwIRC,eAnBS,SAACC,GACrB,MAAM,CACFsC,cAAgBtC,EAAMsC,cACtBF,YAAcpC,EAAMoC,gBAGD,SAACnC,EAAUjB,GAClC,MAAM,CACFiD,WAAa,SAACpD,GACVoB,EH5HY,SAACpB,GACrB,MAAO,CACHJ,KAAMC,EACNG,KAAMA,GGyHOqB,CAAiBrB,KAG9BO,YAAc,WACVa,EAASC,SAMNH,CAA4C8B,GCzIrDY,E,kDAEF,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAMV8C,eAAiB,SAACzB,GACd,EAAKQ,SAAS,CACVG,QAAUX,EAAMC,OAAOC,SATZ,EAanBmC,SAAW,WACP,EAAK1D,MAAM0D,SAAS,EAAK1C,MAAMgB,UAZ/B,EAAKhB,MAAQ,CACTgB,QAAU,IAHC,E,0CAiBnB,WACI,OACI,qBAAKzB,UAAU,sCAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACIK,KAAK,UACLW,MAAOf,KAAKQ,MAAMgB,QAClBvC,KAAK,OACLc,UAAU,eACVoD,YAAY,+BACZvC,SAAUZ,KAAKsC,iBAEnB,sBAAMvC,UAAU,kBAAhB,SACI,yBAAQA,UAAU,kBAAkBd,KAAK,SAASiB,QAASF,KAAKkD,SAAhE,UACI,sBAAMnD,UAAU,sBADpB,uB,GAhCQO,aAoDjBC,eAVS,SAAAC,GACpB,MAAO,MAEgB,SAACC,EAASjB,GACjC,MAAM,CACF0D,SAAW,SAAC1B,GACRf,EJAc,SAACe,GACvB,MAAO,CACHvC,KAAMC,EACNsC,QAASA,GIHId,CAAmBc,QAIzBjB,CAA4C0C,GCpDrDG,E,4MAEFlD,QAAU,SAACmD,EAAQC,GACf,EAAK9D,MAAM+D,OAAO,CACdzB,GAAKuB,EACLtC,MAAQuC,K,4CAIhB,WAAU,IAAD,OACL,OACI,qBAAKvD,UAAU,sCAAf,SACI,sBAAKA,UAAU,WAAf,UACI,yBACIA,UAAU,kCACVd,KAAK,SACLQ,GAAG,gBACH,cAAY,WACZ,gBAAc,OACd,gBAAc,OANlB,+BAQY,sBAAMM,UAAU,sCAE5B,qBAAIA,UAAU,gBAAgB,kBAAgB,gBAA9C,UACI,oBAAIG,QAAU,kBAAM,EAAKA,QAAQ,OAAQ,IAAzC,SACI,mBACIsD,KAAK,SACLzD,UAAoC,SAAvBC,KAAKR,MAAMiC,KAAKK,IACC,IAA1B9B,KAAKR,MAAMiC,KAAKV,MAAe,gBAAkB,GAHzD,SAII,sBAAMhB,UAAU,4BAAhB,4BAKR,oBAAIG,QAAU,kBAAM,EAAKA,QAAQ,QAAS,IAA1C,SACK,mBACGsD,KAAK,SACLzD,UAAoC,SAAvBC,KAAKR,MAAMiC,KAAKK,KACE,IAA3B9B,KAAKR,MAAMiC,KAAKV,MAAgB,gBAAkB,GAHzD,SAIG,sBAAMhB,UAAU,6BAAhB,4BAKR,oBAAIyD,KAAK,YAAYzD,UAAU,YAC/B,oBAAIG,QAAU,kBAAM,EAAKA,QAAQ,SAAU,IAA3C,SACK,mBACGsD,KAAK,SACLzD,UAAoC,WAAvBC,KAAKR,MAAMiC,KAAKK,IACC,IAA1B9B,KAAKR,MAAMiC,KAAKV,MAAe,gBAAkB,GAHxD,oDAOL,oBAAIb,QAAU,kBAAM,EAAKA,QAAQ,UAAW,IAA5C,SACK,mBACGsD,KAAK,SACLzD,UAAoC,WAAvBC,KAAKR,MAAMiC,KAAKK,KACE,IAA3B9B,KAAKR,MAAMiC,KAAKV,MAAgB,gBAAkB,GAHzD,sD,GAtDCT,aA+EfC,eAZS,SAAAC,GACpB,MAAO,CACHiB,KAAOjB,EAAMiB,SAGM,SAAChB,EAASjB,GACjC,MAAM,CACF+D,OAAS,SAAC9B,GACNhB,ELrBY,SAACgB,GACrB,MAAO,CACHxC,KAAMC,EACNuC,KAAMA,GKkBOf,CAAiBe,QAIvBlB,CAA4C6C,GCpE5CK,E,4JAVX,WACI,OACI,sBAAK1D,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GALUO,aCIpBoD,E,4MAGFC,aAAe,WACX,IAAKf,EAAc,EAAKpD,MAAnBoD,YACDA,GAAkC,KAAnBA,EAAYnD,GAC3B,EAAKD,MAAMM,aAEX,EAAKN,MAAMmE,eAEhB,EAAKnE,MAAMoE,YAAY,CAClBnE,GAAK,GACLW,KAAO,GACPH,QAAS,K,4CAIjB,WACI,IAAK6C,EAAgB9C,KAAKR,MAArBsD,cACL,OACI,sBAAK/C,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mEAA0B,0BAE9B,sBAAKA,UAAU,MAAf,UACI,qBAAKA,WAA8B,IAAlB+C,EACb,sCAAwC,GAD5C,SAEG,cAAC,EAAD,MAEH,sBAAK/C,WAA8B,IAAlB+C,EAAyB,sCAAwC,0CAAlF,UACI,yBACI7D,KAAK,SACLc,UAAU,kBACTG,QAASF,KAAK2D,aAHnB,UAII,sBAAM5D,UAAU,qBAJpB,+BAOA,cAAC,EAAD,IACA,cAAC,EAAD,iB,GAtCNO,aAiEHC,eAnBS,SAAAC,GACpB,MAAO,CACHsC,cAAgBtC,EAAMsC,cACtBF,YAAcpC,EAAMoC,gBAGD,SAACnC,EAASjB,GACjC,MAAM,CACFmE,aAAe,WACXlD,EAASC,MAEbkD,YAAc,SAACvE,GACXoB,EAASC,EAAiBrB,KAE9BS,WAAa,WACTW,EPlDD,CACHxB,KAAMC,QOqDCqB,CAA4CmD,GC7D5CG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCLVQ,EAAK,WACD,OAAQC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAAqBC,SAAS,IAAIC,UAAU,IAG7EC,EAAW,WACX,OAAON,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAC/CA,IAAO,IAAMA,IAAOA,IAAOA,KAE3BO,EAAY,SAACvD,EAAO7B,GACvB,IAAIqF,GAAU,EAMd,OALAxD,EAAMyD,SAAQ,SAAC1F,EAAMc,GACjBd,EAAKI,KAAOA,IACdqF,EAAS3E,MAGJ2E,GAIJE,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,SAEtCC,EAAeL,GAAc,GA2ClBM,EA1CC,WAAiC,IAAhC9E,EAA+B,uDAAvB6E,EAAaE,EAAU,uCAC3C9F,EAAK,GACLU,GAAS,EACb,OAAOoF,EAAOtG,MACb,KAAKC,EACJ,OAAOsB,EACR,KAAKtB,EACJ,IAAIG,EAAO,CACVI,GAAK8F,EAAOlG,KAAKI,GACjBW,KAAOmF,EAAOlG,KAAKe,KACnBH,OAAgC,SAAvBsF,EAAOlG,KAAKY,QAWtB,OATKZ,EAAKI,GAMTe,EADAL,EAAQ0E,EAAUrE,EAAMnB,EAAKI,KACdJ,GALfA,EAAKI,GAAKmF,IACVpE,EAAMgF,KAAKnG,IAMZ8F,aAAaM,QAAQ,QAAQR,KAAKS,UAAUlF,IACrC,YAAIA,GACZ,KAAKtB,EAQJ,OAPAO,EAAK8F,EAAO9F,GAEPe,EADCL,EAAQ0E,EAAUrE,EAAOf,IAC1B,2BACIe,EAAML,IADV,IAECF,QAAUO,EAAML,GAAOF,SAEvBkF,aAAaM,QAAQ,QAASR,KAAKS,UAAUlF,IAC5C,YAAIA,GACZ,KAAKtB,EAKJ,OAJAO,EAAK8F,EAAO9F,GACZU,EAAQ0E,EAAUrE,EAAOf,GACzBe,EAAMmF,OAAOxF,EAAM,GACnBgF,aAAaM,QAAQ,QAASR,KAAKS,UAAUlF,IACtC,YAAIA,GACZ,QACC,OAAOA,IC3CK8E,EAdC,WAAiC,IAAhC9E,EAA+B,wDAAV+E,EAAU,uCAC/C,OAAOA,EAAOtG,MACb,KAAKC,EACJ,OAAQsB,EACT,KAAKtB,EAEJ,OADAsB,GAAQ,EAET,KAAKtB,EAEJ,OADDsB,GAAQ,EAER,QAAU,OAAOA,ICXf6E,EAAe,CAClB5F,GAAK,GACFW,KAAO,GACPH,QAAS,GAWEqF,EATC,WAAiC,IAAhC9E,EAA+B,uDAAvB6E,EAAaE,EAAU,uCAC/C,OAAOA,EAAOtG,MACb,KAAKC,EACJ,OAAOqG,EAAOlG,KAEf,QAAU,OAAOmB,ICVf6E,EAAe,CACfjF,KAAO,GACPH,QAAU,GAaCqF,GAXC,WAAiC,IAAhC9E,EAA+B,uDAAvB6E,EAAaE,EAAU,uCAC/C,OAAOA,EAAOtG,MACb,KAAKC,EACJ,MAAO,CACNkB,KAAOmF,EAAOtE,OAAOb,KACrBH,OAAU2F,SAASL,EAAOtE,OAAOhB,OAAQ,KAE3C,QAAU,OAAOO,ICFJ8E,GARC,WAAiC,IAAhC9E,EAA+B,uDAD7B,GACmB+E,EAAU,uCAC/C,OAAOA,EAAOtG,MACb,KAAKC,EACJ,OAAOqG,EAAO/D,QACf,QAAU,OAAOhB,ICPf6E,GAAe,CACfvD,GAAK,OACLf,MAAQ,GAaGuE,GAXC,WAAiC,IAAhC9E,EAA+B,uDAAvB6E,GAAaE,EAAU,uCAC/C,OAAOA,EAAOtG,MACb,KAAKC,EACJ,MAAO,CACN4C,GAAKyD,EAAO9D,KAAKK,GACjBf,MAAQwE,EAAO9D,KAAKV,OAEtB,QAAU,OAAOP,ICIJ8E,GATGO,YAAgB,CACjCvE,MAAQA,EACRwB,cAAgBA,EAChBF,YAAcA,EACdrB,YAAcA,GACda,OAASA,GACTX,KAAOA,KCLFqE,GAAQC,YACZT,GACAU,OAAOC,8BAAgCD,OAAOC,gCAIhDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAASA,GAAnB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SAM1BxC,M","file":"static/js/main.dea8b0cf.chunk.js","sourcesContent":["//khai bao hang so su dung trong chuong trinh.\r\nexport const LIST_ALL = 'LIST_ALL';\r\nexport const SAVE_TASK = 'SAVE_TASK'; \r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';  \r\nexport const CLOSE_FORM = 'CLOSE_FORM'; \r\nexport const OPEN_FORM = 'OPEN_FORM'; \r\nexport const UPDATE_STATUS_TASK = 'UPDATE_STATUS_TASK'; \r\nexport const DELETE_TASK = 'DELETE_TASK'; \r\nexport const EDIT_TASK='EDIT_TASK';\r\nexport const FILTER_TABLE='FILTER_TABLE';\r\nexport const SEARCH='SEARCH';\r\nexport const SORT='SORT';","import * as types from './../constants/ActionTypes';\r\n\r\nexport const listAll = (type) => {\r\n    return {\r\n        type: types.LIST_ALL\r\n    }\r\n};\r\nexport const saveTask = (task) => {\r\n    return {\r\n        type: types.SAVE_TASK,\r\n        task: task\r\n    }\r\n};\r\nexport const toggleForm = () => {\r\n    return {\r\n        type: types.TOGGLE_FORM\r\n    }\r\n};\r\nexport const openForm = () => {\r\n    return {\r\n        type: types.OPEN_FORM\r\n    }\r\n};\r\nexport const closeForm = () => {\r\n    return {\r\n        type: types.CLOSE_FORM\r\n    }\r\n};\r\nexport const updateStatus = (id) => {\r\n    return {\r\n        type: types.UPDATE_STATUS_TASK,\r\n        id: id\r\n    }\r\n};\r\nexport const deleteTask = (id) => {\r\n    return {\r\n        type: types.DELETE_TASK,\r\n        id: id\r\n    }\r\n};\r\nexport const editTask = (task) => {\r\n    return {\r\n        type: types.EDIT_TASK,\r\n        task: task\r\n    }\r\n};\r\nexport const filterTask = (filter) => {\r\n    return {\r\n        type: types.FILTER_TABLE,\r\n        filter: filter //filter name && status\r\n    }\r\n};\r\nexport const searchTask = (keyword) => {\r\n    return {\r\n        type: types.SEARCH,\r\n        keyword: keyword\r\n    }\r\n};\r\nexport const sortTask = (sort) => {\r\n    return {\r\n        type: types.SORT,\r\n        sort: sort //sort by && value\t\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index'; \r\n\r\n\r\nclass TaskItem extends Component {\r\n\r\n    showStatusElement(){\r\n        return (\r\n            <span\r\n                className={ this.props.task.status ? 'label label-danger' : 'label label-info' }\r\n                onClick={ this.onUpdateStatus }\r\n            >{ this.props.task.status === true ? 'Kích Hoạt' : 'Ẩn' }</span>\r\n        );\r\n    }\r\n\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n\r\n    onDeleteItem = () => {\r\n        this.props.onDeleteTask(this.props.task.id);\r\n        this.props.onCloseForm();\r\n    }\r\n\r\n    onEditTask = () => {\r\n        this.props.onOpenForm();\r\n        this.props.onEditTask(this.props.task);    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{ this.props.index }</td>\r\n                <td>{ this.props.task.name }</td>\r\n                <td className=\"text-center\">\r\n                    { this.showStatusElement() }\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-warning\" \r\n                        onClick={ this.onEditTask }>\r\n                        <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={ this.onDeleteItem }>\r\n                        <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {};\r\n};\r\nconst mapDispatchToProps = (dispatch,props) => {\r\n    return{\r\n        onUpdateStatus : (id) => {\r\n            dispatch(actions.updateStatus(id));\r\n        },\r\n        onDeleteTask : (id) => {\r\n            dispatch(actions.deleteTask(id));\r\n        },\r\n         onCloseForm : () => {\r\n            dispatch(actions.closeForm());\r\n        },\r\n        onOpenForm : () => {\r\n            dispatch(actions.toggleForm());\r\n        },\r\n          \r\n        onEditTask : (task) =>{\r\n            dispatch(actions.editTask(task));\r\n        }\r\n    };  \r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskItem);","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index'; \r\n\r\nclass TaskList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName : '',\r\n            filterStatus : -1\r\n        };\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var filter = {\r\n            name : name === 'filterName' ? value : this.state.filterName, \r\n            status : name === 'filterStatus' ? value : this.state.filterStatus \r\n        };\r\n        this.props.onFilterTable(filter);\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var { tasks,filterTable, keyword, sort} = this.props;\r\n        console.log(sort);\r\n\r\n        if (filterTable.name) {\r\n            tasks = tasks.filter((task) => {\r\n                return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1\r\n            });\r\n        }\r\n        tasks = tasks.filter((task) =>{\r\n            if (filterTable.status === -1) {\r\n                return task;\r\n            }\r\n            else{\r\n            return task.status === (filterTable.status === 1 ? true : false);\r\n            }           \r\n        });\r\n\r\n        //search\r\n        tasks = tasks.filter((task) =>{\r\n            return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\r\n        });\r\n     \r\n        ///sort\r\n        if (sort.by === 'name') {\r\n            tasks.sort((a, b) =>{\r\n                if (a.name > b.name) return sort.value;\r\n                else if (a.name < b.name) return -sort.value;\r\n                else return 0;\r\n            });\r\n        }\r\n        else{\r\n            tasks.sort((a, b) =>{\r\n                if (a.status > b.status) return -sort.value;\r\n                else if (a.status < b.status) return sort.value;\r\n                else return 0;\r\n            });\r\n        }\r\n        var elmTasks = tasks.map((task, index) => {\r\n            return (\r\n                <TaskItem\r\n                    key={task.id}\r\n                    task={task}\r\n                    index={index + 1}\r\n                />\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hành Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"filterName\"\r\n                                        onChange={ this.onChange }\r\n                                        value={ this.state.filerName }\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"filterStatus\"\r\n                                        onChange={ this.onChange }\r\n                                        value={ this.state.filterStatus }\r\n                                    >\r\n                                        <option value={-1}>Tất Cả</option>\r\n                                        <option value={0}>Ẩn</option>\r\n                                        <option value={1}>Kích Hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            { elmTasks }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//lay danh sach cac task hien thi len tasklist\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        tasks : state.tasks,\r\n        filterTable : state.filterTable,\r\n        keyword : state.search,\r\n        sort : state.sort\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch,props) => {\r\n    return{\r\n        onFilterTable : (filter) => {\r\n            dispatch(actions.filterTask(filter));\r\n        }\r\n    };  \r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n"," import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'; \r\nimport * as actions from './../actions/index';\r\n\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            name : '',\r\n            status : false\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        if(this.props.itemEditing && this.props.itemEditing.id !== null){\r\n            this.setState({\r\n                id : this.props.itemEditing.id,\r\n                name : this.props.itemEditing.name,\r\n                status : this.props.itemEditing.status \r\n            });\r\n        }else{\r\n            this.onClear();\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps && nextProps.itemEditing){\r\n            this.setState({\r\n                id : nextProps.itemEditing.id,\r\n                name : nextProps.itemEditing.name,\r\n                status : nextProps.itemEditing.status\r\n            });\r\n        }else{\r\n            this.onClear();\r\n        }\r\n    }\r\n\r\n    onHandleChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onSave = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSaveTask(this.state);\r\n        this.onClear();\r\n        this.onExitForm();\r\n    }\r\n\r\n    onClear = () => {\r\n        this.setState({\r\n            name : '',\r\n            status : false\r\n        });\r\n    }\r\n\r\n    onExitForm = () => {\r\n        this.props.onCloseForm();    \r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isDisplayForm) {\r\n            return '';\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"panel panel-warning\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">\r\n                            { !this.state.id ? 'Thêm Công Việc' : 'Cập Nhật Công Việc' }\r\n                            <span\r\n                                className=\"fa fa-times-circle text-right\"\r\n                                onClick={this.onExitForm}\r\n                            ></span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <form onSubmit={this.onSave} >\r\n                            <div className=\"form-group\">\r\n                                <label>Tên :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={ this.onHandleChange }\r\n                                />\r\n                            </div>\r\n                            <label>Trạng Thái :</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                value={this.state.status}\r\n                                onChange={this.onHandleChange}\r\n                                name=\"status\"\r\n                            >\r\n                                <option value={true}>Kích Hoạt</option>\r\n                                <option value={false}>Ẩn</option>\r\n                            </select><br/>\r\n                            <div className=\"text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-warning\">\r\n                                    <span className=\"fa fa-plus mr-5\"></span>Lưu Lại\r\n                                </button>&nbsp;\r\n                                <button type=\"button\" onClick={ this.resetState } className=\"btn btn-danger\">\r\n                                    <span className=\"fa fa-close mr-5\"></span>Hủy Bỏ\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        isDisplayForm : state.isDisplayForm,\r\n        itemEditing : state.itemEditing\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return{\r\n        onSaveTask : (task) => {\r\n            dispatch(actions.saveTask(task));\r\n\r\n        },\r\n        onCloseForm : () => {\r\n            dispatch(actions.closeForm())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskForm); \r\n ","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass TaskSearchControl extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword : ''\r\n        }\r\n    }\r\n\r\n    onHandleChange = (event) => {\r\n        this.setState({\r\n            keyword : event.target.value\r\n        });\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        name=\"keyword\"\r\n                        value={this.state.keyword}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Nhập từ khóa...\"\r\n                        onChange={this.onHandleChange}\r\n                    />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={this.onSearch}>\r\n                            <span className=\"fa fa-search mr-5\"></span>Tìm\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { };\r\n};\r\nconst mapDispatchToProps = (dispatch,props) => {\r\n    return{\r\n        onSearch : (keyword) => {\r\n            dispatch(actions.searchTask(keyword));\r\n        }\r\n    };  \r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskSearchControl);\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass TaskSortControl extends Component {\r\n\r\n    onClick = (sortBy, sortValue) => {\r\n        this.props.onSort({\r\n            by : sortBy,\r\n            value : sortValue\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button\r\n                        className=\"btn btn-primary dropdown-toggle\"\r\n                        type=\"button\"\r\n                        id=\"dropdownMenu1\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\"\r\n                    >\r\n                        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={ () => this.onClick('name', 1) } >\r\n                            <a \r\n                                role=\"button\" \r\n                                className={ (this.props.sort.by === 'name' && \r\n                                    this.props.sort.value === 1) ? 'sort_selected' : '' }>\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                    Tên A-Z\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={ () => this.onClick('name', -1) } >\r\n                             <a \r\n                                role=\"button\" \r\n                                className={ (this.props.sort.by === 'name' && \r\n                                    this.props.sort.value === -1) ? 'sort_selected' : '' }>\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên Z-A\r\n                                </span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li onClick={ () => this.onClick('status', 1) } >\r\n                             <a \r\n                                role=\"button\" \r\n                                className={ (this.props.sort.by === 'status' && \r\n                                    this.props.sort.value === 1) ? 'sort_selected' : '' }>\r\n                                Trạng Thái Kích Hoạt\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={ () => this.onClick('status', -1) } >\r\n                             <a \r\n                                role=\"button\" \r\n                                className={ (this.props.sort.by === 'status' && \r\n                                    this.props.sort.value === -1) ? 'sort_selected' : '' }>\r\n                                Trạng Thái Ẩn\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        sort : state.sort\r\n     };\r\n};\r\nconst mapDispatchToProps = (dispatch,props) => {\r\n    return{\r\n        onSort : (sort) => {\r\n            dispatch(actions.sortTask(sort));\r\n        }\r\n    };  \r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskSortControl);\r\n","import React, { Component } from 'react';\r\nimport TaskSearchControl from './TaskSearchControl';\r\nimport TaskSortControl from './TaskSortControl';\r\n\r\nclass TaskControl extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <TaskSearchControl/>\r\n                <TaskSortControl/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskControl;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport {connect} from 'react-redux';\nimport * as actions from './actions/index'; \n\nclass App extends Component {\n\n    //toggle redux\n    onToggleForm = () => {\n        var {itemEditing} =this.props;\n        if (itemEditing && itemEditing.id !== '') {\n            this.props.onOpenForm();\n        }else{\n            this.props.onToggleForm();\n        }\n       this.props.onClearTask({\n            id : '',\n            name : '',\n            status : false\n       });\n    }\n\n    render() {\n        var {isDisplayForm} =this.props;        \n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayForm === true ? \n                        'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                       <TaskForm/>\n                    </div>\n                    <div className={ isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-primary\" \n                             onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-15\">\n                            </span>Thêm Công Việc\n                        </button>\n                        <TaskControl />\n                        <TaskList/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state =>{\n    return {\n        isDisplayForm : state.isDisplayForm,\n        itemEditing : state.itemEditing\n    };\n};\nconst mapDispatchToProps = (dispatch,props) => {\n    return{\n        onToggleForm : () => {\n            dispatch(actions.toggleForm())\n        },\n        onClearTask : (task) => {\n            dispatch(actions.editTask(task));\n        },\n        onOpenForm : () => {\n            dispatch(actions.openForm());\n        },\n    };  \n};\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from './../constants/ActionTypes';\r\n\r\nvar s4 = () => {\r\n        return  Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\nvar randomID = () =>{\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + \r\n    s4() + '-' + s4() + s4() + s4();\r\n}\r\nvar findIndex = (tasks, id) => {\r\n\tvar result = -1;\r\n\ttasks.forEach((task, index) => {\r\n\t\tif(task.id === id ){\r\n\t\t\tresult = index;\r\n\t\t}\r\n\t});\r\n\treturn result; \r\n};\r\n\r\n//lay du lieu tu file JSON len\r\nvar data= JSON.parse(localStorage.getItem('task'));\r\n//tra ve mang cos du lieu hoac mang rong\r\nvar initialState = data ? data : [];\r\nvar myReducer = (state = initialState,action) =>{\r\n\tvar id = '';\r\n\tvar index = -1;\r\n\tswitch(action.type){\r\n\t\tcase types.LIST_ALL :\r\n\t\t\treturn state;\r\n\t\tcase types.SAVE_TASK :\r\n\t\t\tvar task = {\r\n\t\t\t\tid : action.task.id,\r\n\t\t\t\tname : action.task.name,\r\n\t\t\t\tstatus : action.task.status === 'true' ? true : false\r\n\t\t\t};\r\n\t\t\tif (!task.id) {\r\n\t\t\t\ttask.id = randomID();\r\n\t\t\t\tstate.push(task);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tindex = findIndex(state,task.id);\r\n\t\t\t\tstate[index] = task;\r\n\t\t\t}\r\n\t\t\tlocalStorage.setItem('tasks',JSON.stringify(state));\r\n\t\t\treturn [...state];\r\n\t\tcase types.UPDATE_STATUS_TASK :  \r\n\t\t\tid = action.id;\r\n\t        index = findIndex(state, id);\r\n\t       state[index] = {\r\n\t       \t...state[index],\r\n\t       \tstatus : !state[index].status\r\n\t       };\r\n\t        localStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\treturn [...state];\r\n\t\tcase types.DELETE_TASK :\r\n\t\t\tid = action.id;\r\n\t\t\tindex = findIndex(state, id);\r\n\t\t\tstate.splice(index,1);\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(state));\r\n\t\t\treturn [...state];\r\n\t\tdefault : \r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default myReducer;\t   ","import * as types from './../constants/ActionTypes';\r\n\r\n\r\n//tra ve mang cos du lieu hoac mang rong\r\nvar initialState = false; //close form\r\nvar myReducer = (state = initialState,action) =>{\r\n\tswitch(action.type){\r\n\t\tcase types.TOGGLE_FORM :\r\n\t\t\treturn !state;\r\n\t\tcase types.OPEN_FORM :\r\n\t\t\tstate = true;\r\n\t\t\treturn state;\r\n\t\tcase types.CLOSE_FORM :\r\n\t\tstate = false;\r\n\t\t\treturn state;\t\t\r\n\t\tdefault : return state;\r\n\t}\r\n};\r\n\r\nexport default myReducer;\t   ","import * as types from './../constants/ActionTypes';\r\n\r\n\r\n//tra ve mang cos du lieu hoac mang rong\r\nvar initialState = {\r\n\tid : '',\r\n    name : '',\r\n    status : false\r\n}; \r\nvar myReducer = (state = initialState,action) =>{\r\n\tswitch(action.type){\r\n\t\tcase types.EDIT_TASK:\r\n\t\t\treturn action.task;\r\n\t\t\t\t\r\n\t\tdefault : return state;\r\n\t}\r\n};\r\n\r\nexport default myReducer;\t   ","import * as types from './../constants/ActionTypes';\r\n\r\n\r\n//tra ve mang cos du lieu hoac mang rong\r\nvar initialState = {\r\n    name : '',\r\n    status : -1\r\n}; \r\nvar myReducer = (state = initialState,action) =>{\r\n\tswitch(action.type){\r\n\t\tcase types.FILTER_TABLE:\r\n\t\t\treturn {\r\n\t\t\t\tname : action.filter.name,\r\n\t\t\t\tstatus :  parseInt(action.filter.status, 10)\r\n\t\t\t}\t\t\t\t\r\n\t\tdefault : return state;\r\n\t}\r\n};\r\n\r\nexport default myReducer;\t   ","import * as types from './../constants/ActionTypes';\r\n\r\n\r\n\r\nvar initialState = ''; \r\nvar myReducer = (state = initialState,action) =>{\r\n\tswitch(action.type){\r\n\t\tcase types.SEARCH:\r\n\t\t\treturn action.keyword;\t\t\t\r\n\t\tdefault : return state;\r\n\t}\r\n};\r\n\r\nexport default myReducer;\t   ","import * as types from './../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    by : 'name',\r\n    value : 1\r\n}; \r\nvar myReducer = (state = initialState,action) =>{\r\n\tswitch(action.type){\r\n\t\tcase types.SORT:\r\n\t\t\treturn {\r\n\t\t\t\tby : action.sort.by,\r\n\t\t\t\tvalue : action.sort.value\r\n\t\t\t};\t\t\t\t\r\n\t\tdefault : return state;\r\n\t}\r\n};\r\n\r\nexport default myReducer;\t   ","import { combineReducers} from 'redux';\r\nimport tasks from './tasks';\r\nimport isDisplayForm from './isDisplayForm';\r\nimport itemEditing from './itemEditing';\r\nimport filterTable from './filterTable';\r\nimport search from './search';\r\nimport sort from './sort';\r\n\r\nconst myReducer = combineReducers({\r\n\ttasks : tasks,\r\n\tisDisplayForm : isDisplayForm,\r\n\titemEditing : itemEditing,\r\n\tfilterTable : filterTable,\r\n\tsearch : search,\r\n\tsort : sort,\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//tạo Store\nimport { createStore} from 'redux';\nimport myReducer from './reducers/index';\nimport {Provider} from 'react-redux';\nconst store = createStore(\n  myReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n); \n\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}